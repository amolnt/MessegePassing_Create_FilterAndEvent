/* service file backend */

import os
import time
import hashlib
import json
import re
import datetime
import psycopg2
from ConfigParser import SafeConfigParser

checkRecord=[]
parser=SafeConfigParser()
parser.read('../tConfig.cfg')
fileDir=parser.get('fileOperations','files')
databaseDir=parser.get('fileOperations','database')
logFile=parser.get('fileOperations','logFile')
logDir=parser.get('fileOperations','logDir')

now=datetime.datetime.now()
def generateResponse(filename,data):
    count=0
    data = json.loads(data)
    fileSep=filename.split(".")

    try:
        calender=data['calender']
        try:
            #db = sqlite3.connect(databaseDir+"user.db")
            connection_str="dbname='amol' user='amol' host='localhost' password='@mol'"
            db = psycopg2.connect(connection_str)
            cursor = db.cursor()
            
            cursor.execute("select username from users where birthdate='"+calender['todayDate']+"';")
            b=cursor.fetchall()
            if len(b)==0:
                fdResponse=open(fileDir+""+calender['user']+".response.csv","w+")
                fdResponse.write("")
                fdResponse.close()      
                return
            fdResponse=open(fileDir+""+calender['user']+".response.csv","w+")
            for records in b:
                string=""
                for rd in records:
                    string+=str(rd)+","
                string=string.rstrip(',')
                string+="\n"
                with open(fileDir+""+calender['user']+".response.csv", "a+") as myfile:
                    myfile.write(string)
                myfile.close()
            db.commit()
            db.close()
            return
        except psycopg2.OperationalError as e:
            db.commit()
            db.close()
            print e
    except KeyError,e:
        pass
    except TypeError as e:
        pass

    try:
        post=data['post']
        fflag=True
        try:
            #db = sqlite3.connect(databaseDir+"user.db")
            connection_str="dbname='amol' user='amol' host='localhost' password='@mol'"
            db = psycopg2.connect(connection_str)
            cursor = db.cursor()
            
            cursor.execute("select birthdate from users where username='"+post['eventUser']+"';")
            b=cursor.fetchall()
            b=b[0][0]
            
            listfiles=os.listdir(fileDir)
            for files in listfiles:
                if str(files)==str(post['postUser'])+".calender.response.txt":
                    fflag=False
                    break
            if fflag==True:
                cursor.execute("insert into eventuserspost(eventuser,postuser,postmsg,eventuserbd,postdate,time) values('"+str(post['eventUser'])+"','"+str(post['postUser'])+"','"+str(post['postMsg'])+"','"+str(b)+"','"+str(post['postdate'])+"','"+str(post['time'])+"');")
               
                fdResponse=open(fileDir+""+post['postUser']+".calender.response.txt","w+")
                fdResponse.write("1")
                fdResponse.close()
            db.commit()
            db.close()
            return
        except psycopg2.OperationalError as e:
            db.commit()
            db.close()
            print e
    except KeyError,e:
        pass
    except TypeError as e:
        pass

    #remove responses
    try:
        filename=filename.split(".")
        fil=filename[1]+"."+filename[2]+"."+filename[3]
        if str(data)[0]=='{' and str(data)[1]=='}' and fil=="calender.request.json" :
            listfiles=os.listdir(fileDir)
            for files in listfiles:
                if files==str(fileSep[0])+".response.csv":
                    os.system("rm "+fileDir+""+fileSep[0]+".response.csv")
                if files==str(filename[0]+".calender.response.txt"):
                    os.system("rm "+fileDir+""+filename[0]+".calender.response.txt")
    except KeyError:
        return

def periodicallyCheck():
    parseIndex=0
    connection_str="dbname='amol' user='amol' host='localhost' password='@mol'"
    conn = psycopg2.connect(connection_str)
    c = conn.cursor()
    
    c.execute("select * from requestsWatcher")
    row=c.fetchall()
    try:
        for records in row:
            fileSep=records[0].split(".")
            name=fileSep[1]+"."+fileSep[2]+"."+fileSep[3]
            if name=="calender.request.json":
                generateResponse(records[0],records[1])
        conn.commit()
        conn.close()
        fd.close()
    except IndexError:
        pass

def main():
    cnt=0
    try:
        while True:
            periodicallyCheck()
    except KeyboardInterrupt:
        return
        
main()








/* uiii */
<%
import time
from mod_python import apache,Cookie

Msg=""
tousername=str(form.getfirst('tousername'))
subject=str(form.getfirst('subject'))
message=str(form.getfirst('message'))
directory='/home/amol/SE2-17-MsgApp/AppBackend/json_files/'
users=""
try:
    os.remove(directory+".request.json")
except Exception:
    pass
username=""
try:
    c=Cookie.get_cookies(req)
    username=c['username'].value
    if str(username)=="None":
        util.redirect(req,"http://localhost/WebBackend/login.psp")
    else:
        userEvent=str(form.getfirst('eventUsers'))
        userPost=username
        post=str(form.getfirst('message'))
        datetime=str(time.strftime("20%y-%m-%d %H:%M:%S"))

        jsondata="{\"calender\":{\"user\":\""+username+"\",\"todayDate\":\""+str(time.strftime("20%y-%m-%d"))+"\"}}"
        flagCookie=Cookie.Cookie("requestFlag","True")
        Cookie.add_cookie(req,flagCookie)
        usernameCookie=Cookie.Cookie("username",username)
        Cookie.add_cookie(req,usernameCookie)
        fdRequest=open(directory+""+username+".calender.request.json","w+")
        fdRequest.write(str(jsondata))
        fdRequest.close()
        flag=False
        useroption=""
        try:
            while(flag!=True):
                listfiles=os.listdir(directory)
                for files in listfiles:
                    if files==str(c['username'].value)+".response.csv":
                        with open(directory+""+username+".response.csv", "r") as f:
                            for line in f:
                                if(line!=username):
                                    users+="<option value='"+str(line)+"'>"+str(line)+"</option>"
                        #fd=open(directory+""+username+".calender.request.json","w+")
                        #fd.write(str("{}"))
                        #fd.close()
                        flag=True
        except ValueError:
            pass

        if str(post)!="None" and len(post)!=0:
            jsondata="{\"post\":{\"postUser\":\""+userPost+"\",\"postMsg\":\""+post+"\",\"postdate\":\""+str(time.strftime("20%y-%m-%d"))+"\",\"time\":\""+str(datetime)+"\",\"eventUser\":\""+str(userEvent.split()[0])+"\"}}"
            flagCookie=Cookie.Cookie("requestFlag","True")
            Cookie.add_cookie(req,flagCookie)
            usernameCookie=Cookie.Cookie("username",username)
            Cookie.add_cookie(req,usernameCookie)
            fdRequest=open(directory+""+username+".calender.request.json","w+")
            fdRequest.write(str(jsondata))
            fdRequest.close()
            Msg="loading process"   
        flag=False
        try:
            listfiles=os.listdir(directory)
            for files in listfiles:
                if files==str(c['username'].value)+".calender.response.txt":
                    fd=open(directory+""+username+".calender.response.txt","r")
                    result=fd.read()
                    if str(result)=="1":
                        Msg="post message successfully"
                    else:
                        Msg="message not post"
                    fd.close()
                    fd=open(directory+""+username+".calender.request.json","w+")
                    fd.write(str("{}"))
                    fd.close()
        except ValueError:
            pass
except KeyError,e:
    util.redirect(req,"http://localhost/WebBackend/login.psp")

#end
%>

<!DOCTYPE html>
<html>
<head>
<title>main</title>
	<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7; IE=EmulateIE9">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no"/>
    <link rel="stylesheet" type="text/css" href="./css/style.css" media="none" onload="if(media!='all')media='all'" />
   	<link rel="stylesheet" type="text/css" href="./css/demo.css" media="none" onload="if(media!='all')media='all'" />
    <script src="./js/jquery.min.js"></script>

<script>
$(document).ready(function(){
    $("#pgrf").hide();
    $("#btn").click(function(){
        $("#prgf").show();
    });
});
function update() {
    location.reload();
}
</script>
<script>
  function preventBack(){window.history.forward();}
  setTimeout("preventBack()", 0);
  window.onunload=function(){null};
</script>
</head>
<body>
<div class="container">
            <div class="designweb-top">
                <span class="right">
                    <a href="http://localhost/WebBackend/logout.psp">
                        <strong>Log out</strong>
                    </a>
                </span>
                <span class="right">
                    <a href="http://localhost/WebBackend/main.psp">
                        <strong id="strmain">welcome <%= username %></strong>
                    </a>
                </span>

                <span class="left">
                    <a href="http://localhost/WebBackend/main.psp">
                        <strong>sendigMsg</strong>
                    </a>
                </span>
                <div class="clr"></div>
            </div>
			<header>
				<h1>Post</h1>
            </header>     
                <p id="prgf" style="padding-left:33%;color:#00529B;"><%= Msg %></p>  
      <div  class="form">
    		<form id="contactform"> 
    			<p class="contact"><label for="username">event Users</label></p> 
                <select name="eventUsers">
                <%= users %>
                </select>
    			
    			<p class="contact"><label for="Message">PostMsg</label></p> 
                <textarea name="message" rows="6"  cols="49" paceholder="Type message here..."></textarea>
                </br>
                </br>
            <input id="btn" class="buttom" name="send" id="submit" tabindex="5" value="send" type="submit">
            <input id="btn" class="buttom" name="updateResponse" id="updateResponse" tabindex="5" value="updateResponse" type="submit" onclick="update()" formnovalidate> 	 
   </form> 
</div>      
</div>
</body>
</html>